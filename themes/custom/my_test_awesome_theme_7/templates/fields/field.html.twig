{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}

{% set wrapperless_fields = {
  'field_names': [
    'body',
    'field_otsk_ds_hero_block',
    'field_otsk_ds_main_body',
    'field_otsk_ds_title',
    'field_otsk_ds_text',
    'field_otsk_ds_link',
    'field_otsk_ds_image',
    'field_otsk_ds_media',
    'field_otsk_ds_paragraphs',
    'field_otsk_ds_block',
    'field_otsk_ds_video',
    'field_media_image',
    'field_paragraphs',
  ]
} %}

{% set classes = [
  'field',
  'field-name-' ~ field_name|clean_class,
  'field-type-' ~ field_type|clean_class,
  'field-label-' ~ label_display,
] %}

{% set title_classes = [
  'field__label',
  label_display == 'visually_hidden' ? 'visually-hidden',
] %}


{% for wrapperless_field, keys in wrapperless_fields %}
  {% if field_name in keys %}
    {% for item in items %}
      {{ item.content }}
    {% endfor %}
  {% else %}

    {% if label_hidden %}
      {% block content %}
        <div {{ attributes.addClass(classes) }}>
          {% for item in items %}
            <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>
          {% endfor %}
        </div>
      {% endblock %}
    {% else %}
      <div {{ attributes.addClass(classes) }}>
        <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
        {% for item in items %}
          <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>
        {% endfor %}
      </div>
    {% endif %}

  {% endif %}
{% endfor %}
